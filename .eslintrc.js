module.exports = {
  extends: [
    'airbnb',
    'plugin:react/all',
    'plugin:ramda/recommended',
    'plugin:import/recommended',
    'plugin:jsonc/recommended-with-jsonc',
  ],
  settings: {
    'import/resolver': {
      typescript: {}, // this loads <rootdir>/tsconfig.json to eslint
    },
    react: {
      version: 'detect',
    },
  },
  parser: '@babel/eslint-parser',
  parserOptions: {
    ecmaVersion: 7,
    sourceType: 'module',
    requireConfigFile: false,
    tsconfigRootDir: __dirname,
    project: [
      './tsconfig.json',
    ],
    babelOptions: {
      presets: [
        '@babel/preset-react',
      ],
    },
  },
  overrides: [
    {
      files: ['*.json', '*.json5', '*.jsonc'],
      parser: 'jsonc-eslint-parser',
    },
    {
      files: ['*.ts', '*.tsx'],
      parser: '@typescript-eslint/parser',
      plugins: ['typescript-sort-keys'],
      extends: [
        'airbnb-typescript',
        'plugin:import/typescript',
      ],
      parserOptions: {
        project: [
          './tsconfig.json',
        ],
      },
      rules: {
        'react/jsx-no-useless-fragment': 'off',
        '@typescript-eslint/default-param-last': 'off',
        '@typescript-eslint/type-annotation-spacing': ['error', { after: true }],
        'import/no-extraneous-dependencies': 'off',
        '@typescript-eslint/semi': [2, 'never'],
        '@typescript-eslint/member-delimiter-style': [
          'error',
          {
            multiline: {
              delimiter: 'none',
              requireLast: false,
            },
          },
        ],
        'typescript-sort-keys/interface': [
          'error',
          'asc',
          { caseSensitive: true, natural: true, requiredFirst: false },
        ],
      },
    },
  ],
  plugins: ['jest', 'jsx-a11y', 'react', 'ramda', 'react-hooks', 'risxss'],
  rules: {
    'react/jsx-no-leaked-render': 'off',
    'risxss/catch-potential-xss-react': 'error',
    curly: ['error', 'all'],
    'prefer-arrow-callback': [
      'error',
      {
        allowNamedFunctions: true,
      },
    ],
    'arrow-parens': ['error', 'as-needed'],
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        exports: 'always-multiline',
        functions: 'always-multiline',
        imports: 'always-multiline',
        objects: 'always-multiline',
      },
    ],
    'no-underscore-dangle': ['error', { allow: ['__'] }],
    'function-paren-newline': 'off',
    'implicit-arrow-linebreak': 'off',
    'import/prefer-default-export': 'off',
    'max-len': ['error', { code: 130 }],
    'no-case-declarations': 'off',
    'no-confusing-arrow': 'off',
    'no-nested-ternary': 'off',
    'no-param-reassign': 'off',
    'no-plusplus': 'off',
    'no-shadow': 'off',
    'no-console': 'error',
    'no-implicit-coercion': ['error', { boolean: true, number: true, string: true }],
    'no-multiple-empty-lines': ['error', { max: 1, maxEOF: 1 }],
    'object-curly-newline': ['error', {
      ObjectExpression: { multiline: true, minProperties: 7, consistent: true },
      ObjectPattern: { multiline: true, minProperties: 7, consistent: true },
      ImportDeclaration: { multiline: true, minProperties: 7, consistent: true },
      ExportDeclaration: { multiline: true, minProperties: 5, consistent: true },
    }],
    'operator-linebreak': 'off',
    'prefer-promise-reject-errors': 'off',
    'react/destructuring-assignment': 'off',
    'react/forbid-prop-types': 'off',
    'react/jsx-filename-extension': 'off',
    'react/jsx-first-prop-new-line': 'off',
    'react/jsx-handler-names': 'off',
    'react/jsx-indent-props': [2, 2],
    'react/jsx-indent': [2, 2],
    'react/jsx-max-depth': 'off',
    'react/jsx-max-props-per-line': 'off',
    'react/jsx-no-bind': 'off',
    'react/jsx-no-duplicate-props': ['error'],
    'react/jsx-no-literals': 'off',
    'react/jsx-one-expression-per-line': 'off',
    'react/jsx-sort-props': ['error', {
      callbacksLast: true,
      shorthandFirst: true,
    }],
    'react/jsx-wrap-multilines': [
      'error',
      {
        arrow: 'parens-new-line',
        logical: 'parens-new-line',
        assignment: 'parens-new-line',
        declaration: 'parens-new-line',
        return: 'parens-new-line',
      },
    ],
    'react/no-children-prop': 'off',
    'react/prop-types': 'off',
    'react/prefer-stateless-function': ['error', { ignorePureComponents: true }],
    'react/require-default-props': 'off',
    indent: ['error', 2, { SwitchCase: 1, ignoredNodes: ['TemplateLiteral'] }],
    semi: [2, 'never'],
    'jsx-quotes': 'error',
    'import/no-extraneous-dependencies': ['error', { devDependencies: ['**/*.test.js', '**/*.spec.js', 'src/setupTests.js'] }],
    'react-hooks/rules-of-hooks': 'error',
    'react/jsx-props-no-spreading': 'off',
    'react/display-name': 'off',
    'react/jsx-curly-newline': 'off',
    'jsx-a11y/alt-text': ['error', {
      elements: ['img'],
      img: ['Image'],
    }],
    'no-mixed-operators': ['error', {
      groups: [
        ['%', '**'],
        ['%', '+'],
        ['%', '-'],
        ['%', '*'],
        ['%', '/'],
        ['&', '|', '<<', '>>', '>>>'],
        ['==', '!=', '===', '!=='],
        ['&&', '||'],
      ],
      allowSamePrecedence: false,
    }],
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    'max-lines': ['warn', { max: 1000 }],
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',
    'react/boolean-prop-naming': 'off',
    'react/function-component-definition': 'off',
    'react/jsx-child-element-spacing': 'off',
    'template-curly-spacing': 'off',
    'react/jsx-newline': 'off',
    'max-params': ['error', 5],
    'default-param-last': 'off',
    'no-import-assign': 'off',
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],
    'import/namespace': 'off',
  },
  env: {
    browser: true,
    'jest/globals': true,
  },
}
